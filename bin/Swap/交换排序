对数组{13,2,33,43,1,34,25,20}
冒泡和快速的共同点是，每趟排序后都会使至少一个元素落在它的最终位置->经过n趟排序，至少会有n个元素在最终位置
(1)冒泡排序（以每次将一个元素放到最终位置为一趟）
最坏情况下（数组逆序），比较次数n(n-1)/2，移动次数3n(n-1)/2，每次比较都要移动元素3次来交换元素位置
时间复杂度O(n^2)，稳定
1 13 2 33 43 20 34 25 
1 2 13 20 33 43 25 34 
1 2 13 20 25 33 43 34 
1 2 13 20 25 33 34 43 
1 2 13 20 25 33 34 43 

(2)快速排序（以基准数p变化为一趟）
最坏情况下两个子表分别包含n-1和0个元素(表本身有序或者逆序)，此时时间复杂度O(n^2)，空间复杂度（递归栈深度）O(n)
理想情况下两个子表的大小不超过n/2，此时时间复杂度O(nlog2 n)，空间复杂度O(log2 n)
不稳定
1 2 13 43 33 34 25 20 p=2
1 2 13 43 33 34 25 20 p=1
1 2 13 20 25 33 34 43 p=25
1 2 13 20 25 33 34 43 p=34
1 2 13 20 25 33 34 43 p=33
1 2 13 20 25 33 34 43 p=20
1 2 13 20 25 33 34 43 p=43
1 2 13 20 25 33 34 43 p=13

7.3试题
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
a c a a d c d d a c  cd c  c  c  a? bc
a c a a d c d d a c  ad b  c  c  d  bc
√ √ √ √ √ √ √ √ √ √  x  x  √  √  x  √
1.可以，不过放进队列里的顺序有所变动
2.//正序冒泡
//逆序冒泡
//正逆序交替->设置一个flag实现交替
3.//判断奇偶
//i顺序搜索偶数，j逆序搜索奇数
//j比i先行动，找到则停下，交换两个数
//遍历直到j与i相遇
4.利用Math.random()产生在子表index范围内的随机数
5.冒泡到k并返回a[k]的算法
6≈寻找能使i=n/2的i
寻找基准元素，如果分组后两组元素数量i=n/2，分组完成；如果i<n/2，对i之后的元素进行划分；如果i>n/2，对i之前的元素进行划分
7.