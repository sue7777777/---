基数排序不是基于比较进行排序的，而是基于关键字各位的大小进行排序的，借助分配和收集对单逻辑关键字进行排序
基数排序又分为最高位优先（MSD）和最低位优先（LSD）排序
假设线性表由节点序列a0，a1，...，an-1构成，每个节点的aj的关键字由d元组组成
例如123，234，556，678这个序列，序列里每个节点都是一个三元组
在排序过程中，对序列里所有三元组的相同位置都进行排序
如下一个三位数的7个节点组成的序列 
		  *		 *		*
329		720		720		329
457		355		329		355
657		436		436		436
839		457		839		457
436		657		355		657
720		329		457		720
355		839		657		839
		  ^		 ^		^
空间：辅助存储空间为r个队列，在排序中重复使用它们
时间：基数排序需要进行d趟分配和手机，一趟分配需要O（n），一趟收集需要O（r）。
	 所以基数排序的时间复杂度为O（d（n+r））与序列的初始状态无关
稳定

试题7.5
1 2 3   4  5 6 7 8   9 10 11 12 13 
c c c,c a? b ? a a,b b b  d  c  c source
c c d,c a  b d b a,b b b  d  c  c answer
√ √ x √ √  √ x x √ √ √ √  √  √  √
fix：
3.归并排序在平均和最坏情况下空间复杂度都是O（n）
快排只有在最坏情况下才会达到O（n），平均情况下为O（log2 n）
归并算法可以看作是这些排序算法中占用辅助空间最多的排序算法
4.排序的比较次数与序列的初始状态无关的是选择排序和归并排序
6.待排序文件较大，内存一次性放不下时，需要存放在外部介质中，也就是使用外部排序，外部排序一般采用归并排序
7.对n个元素进行k路归并排序时，排序趟数m满足k^m=n，m=logk(n)向上取值

1.n=10 log2(10)向上取值4
87,503,61,512,170,908,275,897,462,653（长度2）
61,87,503,512,170,275,897,908,462,653（长度4）
61,87,170,275,503,512,897,908,462,653（长度8）
61,87,170,275,462,503,512,653,897,908（长度10）

2.
30,10,20,12,02,16,16*,06,28,18
02,06,10,12,16,16*,18,20,28,30
需要进行两次分配和收集
